<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="utf-8"/>
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="com.kangcenet.tms.admin.service"/>
    <context:component-scan base-package="com.kangcenet.tms.admin.controller"/>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- *********************************for  job scheduler ********************************* -->
    <bean id="quartzScheduler" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!--<bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <property name="dataSource" ref="dataSource"/>
        <property name="autoStartup" value="true"/>            <!--自动启动 -->
        <property name="startupDelay" value="10"/>                <!--延时启动，应用启动成功后在启动 -->
        <property name="overwriteExistingJobs" value="true"/>    <!--覆盖DB中JOB：true、以数据库中已经存在的为准：false -->
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>

    <bean id="jobScheduler" class="com.kangcenet.tms.admin.core.schedule.JobScheduler" init-method="init"
          destroy-method="destroy">
        <property name="scheduler" ref="quartzScheduler"/>
        <property name="accessToken" value="${job.accessToken}"/>
    </bean>

    <!-- JobHandler 扫描路径 -->
    <context:component-scan base-package="com.kangcenet.tms.admin.jobhandler"/>
    <!-- 配置02、执行器 -->
    <bean id="jobExecutor" class="com.kangcenet.tms.core.executor.JobExecutor" init-method="start"
          destroy-method="destroy">
    </bean>

    <bean id="triggerCallbackThread" class="com.kangcenet.tms.core.thread.TriggerCallbackThread"/>

    <mvc:cors>
        <mvc:mapping path="/**/**"
                     allowed-origins="*"
                     allowed-methods="POST,GET,OPTIONS,DELETE,PUT"
                     allowed-headers="Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
                     allow-credentials="true"/>
    </mvc:cors>

    <!--<bean id="mappingJacksonHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>application/json;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 启动SpringMVC的注解功能，完成请求和注解POJO的映射 &ndash;&gt;-->
    <!--<bean-->
            <!--class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJacksonHttpMessageConverter"/>-->
                <!--<bean-->
                        <!--class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>-->
                <!--<bean-->
                        <!--class="org.springframework.http.converter.StringHttpMessageConverter">-->
                    <!--<property name="supportedMediaTypes">-->
                        <!--<list>-->
                            <!--<value>application/json;charset=UTF-8</value>-->
                        <!--</list>-->
                    <!--</property>-->
                <!--</bean>-->
                <!--<bean class="org.springframework.http.converter.FormHttpMessageConverter"/>-->
                <!--<bean-->
                        <!--class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>-->

                <!--<bean class="org.springframework.http.converter.ResourceHttpMessageConverter"></bean>-->
                <!--<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>-->
                <!--<bean-->
                        <!--class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"></bean>-->
                <!--<bean-->
                        <!--class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"></bean>-->
                <!--<bean-->
                        <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>-->
                <!--&lt;!&ndash; JSON转换器 &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

</beans>