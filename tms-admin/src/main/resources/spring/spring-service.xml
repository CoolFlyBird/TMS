<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="utf-8"/>
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>

    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="com.kangcenet.tms.admin.service"/>
    <context:component-scan base-package="com.kangcenet.tms.admin.controller"/>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- *********************************for  job scheduler ********************************* -->
    <bean id="quartzScheduler" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!--<bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <property name="dataSource" ref="dataSource"/>
        <property name="autoStartup" value="true"/>            <!--自动启动 -->
        <property name="startupDelay" value="10"/>                <!--延时启动，应用启动成功后在启动 -->
        <property name="overwriteExistingJobs" value="true"/>    <!--覆盖DB中JOB：true、以数据库中已经存在的为准：false -->
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>

    <bean id="jobScheduler" class="com.kangcenet.tms.admin.core.schedule.JobScheduler" init-method="init"
          destroy-method="destroy">
        <property name="scheduler" ref="quartzScheduler"/>
        <property name="accessToken" value="${job.accessToken}"/>
    </bean>

    <!-- ********************************* 基础配置 ********************************* -->

    <!-- 配置01、JobHandler 扫描路径 -->
    <context:component-scan base-package="com.kangcenet.tms.admin.jobhandler"/>
    <!-- 配置02、执行器 -->
    <bean id="jobExecutor" class="com.kangcenet.tms.core.executor.JobExecutor" init-method="start"
          destroy-method="destroy">
    </bean>


    <bean id="triggerCallbackThread" class="com.kangcenet.tms.core.thread.TriggerCallbackThread"/>
</beans>